{"remainingRequest":"/Volumes/d/project/shopAdmin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/d/project/shopAdmin/src/components/goods/goodsAttr.vue?vue&type=style&index=0&id=ca1363e4&lang=scss&scoped=true&","dependencies":[{"path":"/Volumes/d/project/shopAdmin/src/components/goods/goodsAttr.vue","mtime":1577094910000},{"path":"/Volumes/d/project/shopAdmin/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/d/project/shopAdmin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/d/project/shopAdmin/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/d/project/shopAdmin/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/d/project/shopAdmin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/d/project/shopAdmin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi53cmFwIHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIC5zcGVjLWxpc3QgewogICAgLnNwZWMtdW5pdCB7CiAgICAgIC8vIGRpc3BsYXk6IGZsZXg7CiAgICAgIG1hcmdpbi10b3A6IDEwcHg7CiAgICAgIC5sYWJlbCB7CiAgICAgICAgZGlzcGxheTogYmxvY2s7CiAgICAgICAgd2lkdGg6IDgwcHg7CiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDJweDsKICAgICAgICB0ZXh0LWFsaWduOiByaWdodDsKICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7CiAgICAgICAgZmxvYXQ6IGxlZnQ7CiAgICAgIH0KICAgICAgLnZhbC13cmFwIHsKICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICAgIG1hcmdpbi1yaWdodDogMTBweDsKICAgICAgICBpIHsKICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgICAgICAgIHJpZ2h0OiAwOwogICAgICAgICAgdG9wOiAwOwogICAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgICAgZGlzcGxheTogbm9uZTsKICAgICAgICB9CiAgICAgICAgJjpob3ZlciBpIHsKICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICAgIH0KICAgICAgfQogICAgICBpbnB1dCB7CiAgICAgICAgb3V0bGluZTogbm9uZTsKICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOwogICAgICAgIGhlaWdodDogMjJweDsKICAgICAgICBsaW5lLWhlaWdodDogMjBweDsKICAgICAgICBwYWRkaW5nOiAwIDVweDsKICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7CiAgICAgIH0KICAgICAgLmRlbC1pY29uIHsKICAgICAgICBtYXJnaW4tbGVmdDogMTBweDsKICAgICAgfQogICAgfQogIH0KICAudGFibGUtd3JhcCB7CiAgICB3aWR0aDogODAwcHg7CiAgICBtYXJnaW4tdG9wOiAxMHB4OwogIH0KfQo="},{"version":3,"sources":["goodsAttr.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"goodsAttr.vue","sourceRoot":"src/components/goods","sourcesContent":["/* \r\n  商品多规格\r\n */\r\n<template>\r\n  <div class=\"wrap\">\r\n    <!-- 规格选择部分 -->\r\n    <div class=\"spec-wrap\">\r\n      <el-button size=\"mini\" @click=\"addSpec\">添加规格</el-button>\r\n      <el-button size=\"mini\" @click=\"getData\">生成</el-button>\r\n      <!-- 自定义多规格列表 -->\r\n      <div class=\"spec-list\">\r\n        <div class=\"spec-item\"\r\n          v-if=\"specList.length > 0\"\r\n          v-for=\"(obj, idx) in specList\"\r\n          :key=\"idx\">\r\n          <div class=\"spec-unit\">\r\n            <span class=\"label\">规格名</span>\r\n            <input type=\"text\" v-model=\"obj.specName\">\r\n            <el-button size=\"mini\" type=\"danger\" class=\"del-icon\" @click=\"delSpecValue(idx, specList)\">删除规格</el-button>\r\n          </div>\r\n          <div class=\"spec-unit\">\r\n            <span class=\"label\">规格值</span>\r\n            <div style=\"margin-left:90px\">\r\n              <div class=\"val-wrap\"\r\n                v-for=\"(item, key) in obj.specVal\"\r\n                :key=\"key\">\r\n                <input type=\"text\" v-model=\"obj.specVal[key]\">\r\n                <i class=\"el-icon-error\" @click=\"delSpecValue(key, obj.specVal)\"></i>\r\n              </div>\r\n              <el-button type=\"primary\" size=\"mini\" @click=\"addSpecValue(obj, $event)\">添加</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 表格 -->\r\n      <div class=\"table-wrap\">\r\n        <el-table\r\n          :data=\"tableData\"\r\n          v-show=\"tableData && tableData.length > 0\"\r\n          size=\"mini\"\r\n          border\r\n          max-height=\"400\">\r\n          <el-table-column\r\n            align=\"center\"\r\n            v-for=\"(item, idx) in tableElementList\"\r\n            :key=\"idx\"\r\n            :prop=\"item\"\r\n            :label=\"item\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            align=\"center\"\r\n            width=\"140\"\r\n            v-for=\"(item, idx) in otherAttr\"\r\n            :key=\"idx+item\"\r\n            :label=\"item.label\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input v-model=\"scope.row[item.key]\" size=\"mini\"></el-input>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 多规格模板\r\n      specTemp: {\r\n        specName: '',\r\n        specVal: ['']\r\n      },\r\n      // 多规格上限\r\n      maxSpec: 3,\r\n      // 多规格列表\r\n      specList: [],\r\n      // 其他属性\r\n      otherAttr: [\r\n        { key: 'price', label: '价格' }, \r\n        { key: 'stock', label: '库存' }\r\n      ],\r\n      // 生成的表格数据\r\n      tableData: [],\r\n      // 动态生成的表格元素\r\n      tableElementList: []\r\n    }\r\n  },\r\n  methods: {\r\n    // 添加一个自定义规格\r\n    addSpec() {\r\n      if(this.specList.length === 3) return;\r\n      this.specList.push(JSON.parse(JSON.stringify(this.specTemp)));\r\n    },\r\n    // 新增一个规格值输入框\r\n    addSpecValue(item, evt) {\r\n      item.specVal.push('');\r\n      this.$nextTick(() => {\r\n        // 最后一个input框获取焦点\r\n        let inputWrpList = evt.currentTarget.parentNode.querySelectorAll('.val-wrap'),\r\n          len = inputWrpList.length;\r\n        inputWrpList[len - 1].querySelector('input').focus();\r\n      });\r\n    },\r\n    // 删除一个多规格值--> 根据索引删除\r\n    delSpecValue(index, arr) {\r\n      arr.splice(index, 1);\r\n    },\r\n    getData() {\r\n      // 处理成笛卡尔积的入参\r\n      let list = this.specList.map(item => item.specVal.map(unit => {\r\n        let obj = {};\r\n        obj[item.specName] = unit;\r\n        return obj\r\n      }));\r\n      // 处理成ele表格需要的格式\r\n      let res = this.cartesian(list).map(item => {\r\n        let resItem = {};\r\n        item.forEach(obj => {\r\n          // 由于键名不固定，因此通过for...in来循环出键名和键值\r\n          for(let key in obj) {\r\n            resItem[key] = obj[key];\r\n          }\r\n        });\r\n        // 生成表格的键\r\n        this.tableElementList = Object.keys(resItem);\r\n        // 加入其他的属性\r\n        this.otherAttr.forEach(unit => {\r\n          resItem[unit.key] = '';\r\n        });\r\n        return resItem;\r\n      });\r\n      this.tableData = res;\r\n      console.log(res);\r\n    },\r\n    // 整合方法\r\n    cartesian(arr) {\r\n      if (arr.length < 2) return arr[0] || [];\r\n      return [].reduce.call(arr, function (col, set) {\r\n        let res = [];\r\n        col.forEach(c => {\r\n          set.forEach(s => {\r\n            let t = [].concat(Array.isArray(c) ? c : [c]);\r\n            t.push(s);\r\n            res.push(t);\r\n          })\r\n        });\r\n        return res;\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  .wrap {\r\n    text-align: left;\r\n    .spec-list {\r\n      .spec-unit {\r\n        // display: flex;\r\n        margin-top: 10px;\r\n        .label {\r\n          display: block;\r\n          width: 80px;\r\n          letter-spacing: 2px;\r\n          text-align: right;\r\n          margin-right: 10px;\r\n          float: left;\r\n        }\r\n        .val-wrap {\r\n          position: relative;\r\n          display: inline-block;\r\n          margin-right: 10px;\r\n          i {\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n            cursor: pointer;\r\n            display: none;\r\n          }\r\n          &:hover i {\r\n            display: block;\r\n          }\r\n        }\r\n        input {\r\n          outline: none;\r\n          border: 1px solid #ccc;\r\n          height: 22px;\r\n          line-height: 20px;\r\n          padding: 0 5px;\r\n          border-radius: 4px;\r\n        }\r\n        .del-icon {\r\n          margin-left: 10px;\r\n        }\r\n      }\r\n    }\r\n    .table-wrap {\r\n      width: 800px;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n</style>"]}]}