{"remainingRequest":"/Volumes/d/project/shopAdmin/node_modules/babel-loader/lib/index.js!/Volumes/d/project/shopAdmin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/d/project/shopAdmin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/d/project/shopAdmin/src/components/goods/goodsAttr.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/d/project/shopAdmin/src/components/goods/goodsAttr.vue","mtime":1577094910000},{"path":"/Volumes/d/project/shopAdmin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/d/project/shopAdmin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/d/project/shopAdmin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/d/project/shopAdmin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pcy1hcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnJlZHVjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8g5aSa6KeE5qC85qih5p2/CiAgICAgIHNwZWNUZW1wOiB7CiAgICAgICAgc3BlY05hbWU6ICcnLAogICAgICAgIHNwZWNWYWw6IFsnJ10KICAgICAgfSwKICAgICAgLy8g5aSa6KeE5qC85LiK6ZmQCiAgICAgIG1heFNwZWM6IDMsCiAgICAgIC8vIOWkmuinhOagvOWIl+ihqAogICAgICBzcGVjTGlzdDogW10sCiAgICAgIC8vIOWFtuS7luWxnuaApwogICAgICBvdGhlckF0dHI6IFt7CiAgICAgICAga2V5OiAncHJpY2UnLAogICAgICAgIGxhYmVsOiAn5Lu35qC8JwogICAgICB9LCB7CiAgICAgICAga2V5OiAnc3RvY2snLAogICAgICAgIGxhYmVsOiAn5bqT5a2YJwogICAgICB9XSwKICAgICAgLy8g55Sf5oiQ55qE6KGo5qC85pWw5o2uCiAgICAgIHRhYmxlRGF0YTogW10sCiAgICAgIC8vIOWKqOaAgeeUn+aIkOeahOihqOagvOWFg+e0oAogICAgICB0YWJsZUVsZW1lbnRMaXN0OiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOa3u+WKoOS4gOS4quiHquWumuS5ieinhOagvAogICAgYWRkU3BlYzogZnVuY3Rpb24gYWRkU3BlYygpIHsKICAgICAgaWYgKHRoaXMuc3BlY0xpc3QubGVuZ3RoID09PSAzKSByZXR1cm47CiAgICAgIHRoaXMuc3BlY0xpc3QucHVzaChKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuc3BlY1RlbXApKSk7CiAgICB9LAogICAgLy8g5paw5aKe5LiA5Liq6KeE5qC85YC86L6T5YWl5qGGCiAgICBhZGRTcGVjVmFsdWU6IGZ1bmN0aW9uIGFkZFNwZWNWYWx1ZShpdGVtLCBldnQpIHsKICAgICAgaXRlbS5zcGVjVmFsLnB1c2goJycpOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8g5pyA5ZCO5LiA5LiqaW5wdXTmoYbojrflj5bnhKbngrkKICAgICAgICB2YXIgaW5wdXRXcnBMaXN0ID0gZXZ0LmN1cnJlbnRUYXJnZXQucGFyZW50Tm9kZS5xdWVyeVNlbGVjdG9yQWxsKCcudmFsLXdyYXAnKSwKICAgICAgICAgICAgbGVuID0gaW5wdXRXcnBMaXN0Lmxlbmd0aDsKICAgICAgICBpbnB1dFdycExpc3RbbGVuIC0gMV0ucXVlcnlTZWxlY3RvcignaW5wdXQnKS5mb2N1cygpOwogICAgICB9KTsKICAgIH0sCiAgICAvLyDliKDpmaTkuIDkuKrlpJrop4TmoLzlgLwtLT4g5qC55o2u57Si5byV5Yig6ZmkCiAgICBkZWxTcGVjVmFsdWU6IGZ1bmN0aW9uIGRlbFNwZWNWYWx1ZShpbmRleCwgYXJyKSB7CiAgICAgIGFyci5zcGxpY2UoaW5kZXgsIDEpOwogICAgfSwKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvLyDlpITnkIbmiJDnrJvljaHlsJTnp6/nmoTlhaXlj4IKICAgICAgdmFyIGxpc3QgPSB0aGlzLnNwZWNMaXN0Lm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLnNwZWNWYWwubWFwKGZ1bmN0aW9uICh1bml0KSB7CiAgICAgICAgICB2YXIgb2JqID0ge307CiAgICAgICAgICBvYmpbaXRlbS5zcGVjTmFtZV0gPSB1bml0OwogICAgICAgICAgcmV0dXJuIG9iajsKICAgICAgICB9KTsKICAgICAgfSk7IC8vIOWkhOeQhuaIkGVsZeihqOagvOmcgOimgeeahOagvOW8jwoKICAgICAgdmFyIHJlcyA9IHRoaXMuY2FydGVzaWFuKGxpc3QpLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHZhciByZXNJdGVtID0ge307CiAgICAgICAgaXRlbS5mb3JFYWNoKGZ1bmN0aW9uIChvYmopIHsKICAgICAgICAgIC8vIOeUseS6jumUruWQjeS4jeWbuuWumu+8jOWboOatpOmAmui/h2Zvci4uLmlu5p2l5b6q546v5Ye66ZSu5ZCN5ZKM6ZSu5YC8CiAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgICAgIHJlc0l0ZW1ba2V5XSA9IG9ialtrZXldOwogICAgICAgICAgfQogICAgICAgIH0pOyAvLyDnlJ/miJDooajmoLznmoTplK4KCiAgICAgICAgX3RoaXMudGFibGVFbGVtZW50TGlzdCA9IE9iamVjdC5rZXlzKHJlc0l0ZW0pOyAvLyDliqDlhaXlhbbku5bnmoTlsZ7mgKcKCiAgICAgICAgX3RoaXMub3RoZXJBdHRyLmZvckVhY2goZnVuY3Rpb24gKHVuaXQpIHsKICAgICAgICAgIHJlc0l0ZW1bdW5pdC5rZXldID0gJyc7CiAgICAgICAgfSk7CgogICAgICAgIHJldHVybiByZXNJdGVtOwogICAgICB9KTsKICAgICAgdGhpcy50YWJsZURhdGEgPSByZXM7CiAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICB9LAogICAgLy8g5pW05ZCI5pa55rOVCiAgICBjYXJ0ZXNpYW46IGZ1bmN0aW9uIGNhcnRlc2lhbihhcnIpIHsKICAgICAgaWYgKGFyci5sZW5ndGggPCAyKSByZXR1cm4gYXJyWzBdIHx8IFtdOwogICAgICByZXR1cm4gW10ucmVkdWNlLmNhbGwoYXJyLCBmdW5jdGlvbiAoY29sLCBzZXQpIHsKICAgICAgICB2YXIgcmVzID0gW107CiAgICAgICAgY29sLmZvckVhY2goZnVuY3Rpb24gKGMpIHsKICAgICAgICAgIHNldC5mb3JFYWNoKGZ1bmN0aW9uIChzKSB7CiAgICAgICAgICAgIHZhciB0ID0gW10uY29uY2F0KEFycmF5LmlzQXJyYXkoYykgPyBjIDogW2NdKTsKICAgICAgICAgICAgdC5wdXNoKHMpOwogICAgICAgICAgICByZXMucHVzaCh0KTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiByZXM7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["goodsAttr.vue"],"names":[],"mappings":"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","sourcesContent":["/* \r\n  商品多规格\r\n */\r\n<template>\r\n  <div class=\"wrap\">\r\n    <!-- 规格选择部分 -->\r\n    <div class=\"spec-wrap\">\r\n      <el-button size=\"mini\" @click=\"addSpec\">添加规格</el-button>\r\n      <el-button size=\"mini\" @click=\"getData\">生成</el-button>\r\n      <!-- 自定义多规格列表 -->\r\n      <div class=\"spec-list\">\r\n        <div class=\"spec-item\"\r\n          v-if=\"specList.length > 0\"\r\n          v-for=\"(obj, idx) in specList\"\r\n          :key=\"idx\">\r\n          <div class=\"spec-unit\">\r\n            <span class=\"label\">规格名</span>\r\n            <input type=\"text\" v-model=\"obj.specName\">\r\n            <el-button size=\"mini\" type=\"danger\" class=\"del-icon\" @click=\"delSpecValue(idx, specList)\">删除规格</el-button>\r\n          </div>\r\n          <div class=\"spec-unit\">\r\n            <span class=\"label\">规格值</span>\r\n            <div style=\"margin-left:90px\">\r\n              <div class=\"val-wrap\"\r\n                v-for=\"(item, key) in obj.specVal\"\r\n                :key=\"key\">\r\n                <input type=\"text\" v-model=\"obj.specVal[key]\">\r\n                <i class=\"el-icon-error\" @click=\"delSpecValue(key, obj.specVal)\"></i>\r\n              </div>\r\n              <el-button type=\"primary\" size=\"mini\" @click=\"addSpecValue(obj, $event)\">添加</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- 表格 -->\r\n      <div class=\"table-wrap\">\r\n        <el-table\r\n          :data=\"tableData\"\r\n          v-show=\"tableData && tableData.length > 0\"\r\n          size=\"mini\"\r\n          border\r\n          max-height=\"400\">\r\n          <el-table-column\r\n            align=\"center\"\r\n            v-for=\"(item, idx) in tableElementList\"\r\n            :key=\"idx\"\r\n            :prop=\"item\"\r\n            :label=\"item\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            align=\"center\"\r\n            width=\"140\"\r\n            v-for=\"(item, idx) in otherAttr\"\r\n            :key=\"idx+item\"\r\n            :label=\"item.label\">\r\n            <template slot-scope=\"scope\">\r\n              <el-input v-model=\"scope.row[item.key]\" size=\"mini\"></el-input>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 多规格模板\r\n      specTemp: {\r\n        specName: '',\r\n        specVal: ['']\r\n      },\r\n      // 多规格上限\r\n      maxSpec: 3,\r\n      // 多规格列表\r\n      specList: [],\r\n      // 其他属性\r\n      otherAttr: [\r\n        { key: 'price', label: '价格' }, \r\n        { key: 'stock', label: '库存' }\r\n      ],\r\n      // 生成的表格数据\r\n      tableData: [],\r\n      // 动态生成的表格元素\r\n      tableElementList: []\r\n    }\r\n  },\r\n  methods: {\r\n    // 添加一个自定义规格\r\n    addSpec() {\r\n      if(this.specList.length === 3) return;\r\n      this.specList.push(JSON.parse(JSON.stringify(this.specTemp)));\r\n    },\r\n    // 新增一个规格值输入框\r\n    addSpecValue(item, evt) {\r\n      item.specVal.push('');\r\n      this.$nextTick(() => {\r\n        // 最后一个input框获取焦点\r\n        let inputWrpList = evt.currentTarget.parentNode.querySelectorAll('.val-wrap'),\r\n          len = inputWrpList.length;\r\n        inputWrpList[len - 1].querySelector('input').focus();\r\n      });\r\n    },\r\n    // 删除一个多规格值--> 根据索引删除\r\n    delSpecValue(index, arr) {\r\n      arr.splice(index, 1);\r\n    },\r\n    getData() {\r\n      // 处理成笛卡尔积的入参\r\n      let list = this.specList.map(item => item.specVal.map(unit => {\r\n        let obj = {};\r\n        obj[item.specName] = unit;\r\n        return obj\r\n      }));\r\n      // 处理成ele表格需要的格式\r\n      let res = this.cartesian(list).map(item => {\r\n        let resItem = {};\r\n        item.forEach(obj => {\r\n          // 由于键名不固定，因此通过for...in来循环出键名和键值\r\n          for(let key in obj) {\r\n            resItem[key] = obj[key];\r\n          }\r\n        });\r\n        // 生成表格的键\r\n        this.tableElementList = Object.keys(resItem);\r\n        // 加入其他的属性\r\n        this.otherAttr.forEach(unit => {\r\n          resItem[unit.key] = '';\r\n        });\r\n        return resItem;\r\n      });\r\n      this.tableData = res;\r\n      console.log(res);\r\n    },\r\n    // 整合方法\r\n    cartesian(arr) {\r\n      if (arr.length < 2) return arr[0] || [];\r\n      return [].reduce.call(arr, function (col, set) {\r\n        let res = [];\r\n        col.forEach(c => {\r\n          set.forEach(s => {\r\n            let t = [].concat(Array.isArray(c) ? c : [c]);\r\n            t.push(s);\r\n            res.push(t);\r\n          })\r\n        });\r\n        return res;\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  .wrap {\r\n    text-align: left;\r\n    .spec-list {\r\n      .spec-unit {\r\n        // display: flex;\r\n        margin-top: 10px;\r\n        .label {\r\n          display: block;\r\n          width: 80px;\r\n          letter-spacing: 2px;\r\n          text-align: right;\r\n          margin-right: 10px;\r\n          float: left;\r\n        }\r\n        .val-wrap {\r\n          position: relative;\r\n          display: inline-block;\r\n          margin-right: 10px;\r\n          i {\r\n            position: absolute;\r\n            right: 0;\r\n            top: 0;\r\n            cursor: pointer;\r\n            display: none;\r\n          }\r\n          &:hover i {\r\n            display: block;\r\n          }\r\n        }\r\n        input {\r\n          outline: none;\r\n          border: 1px solid #ccc;\r\n          height: 22px;\r\n          line-height: 20px;\r\n          padding: 0 5px;\r\n          border-radius: 4px;\r\n        }\r\n        .del-icon {\r\n          margin-left: 10px;\r\n        }\r\n      }\r\n    }\r\n    .table-wrap {\r\n      width: 800px;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n</style>"],"sourceRoot":"src/components/goods"}]}